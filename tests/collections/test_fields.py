# This file was auto-generated by Fern from our API Definition.

from webflow import Webflow
from webflow import AsyncWebflow
import typing
from ..utilities import validate_response


async def test_create(client: Webflow, async_client: AsyncWebflow) -> None:
    expected_response: typing.Any = {
        "id": "75821f618da60c18383330bcc0ca488b",
        "isRequired": False,
        "isEditable": True,
        "type": "RichText",
        "slug": "post-body",
        "displayName": "Post Body",
        "helpText": "Add the body of your post here",
    }
    expected_types: typing.Any = {
        "id": None,
        "isRequired": None,
        "isEditable": None,
        "type": None,
        "slug": None,
        "displayName": None,
        "helpText": None,
    }
    response = client.collections.fields.create(
        collection_id="580e63fc8c9a982ac9b8b745",
        is_required=False,
        type="RichText",
        display_name="Post Body",
        help_text="Add the body of your post here",
    )
    validate_response(response, expected_response, expected_types)

    async_response = await async_client.collections.fields.create(
        collection_id="580e63fc8c9a982ac9b8b745",
        is_required=False,
        type="RichText",
        display_name="Post Body",
        help_text="Add the body of your post here",
    )
    validate_response(async_response, expected_response, expected_types)


async def test_delete(client: Webflow, async_client: AsyncWebflow) -> None:
    # Type ignore to avoid mypy complaining about the function not being meant to return a value
    assert (
        client.collections.fields.delete(collection_id="580e63fc8c9a982ac9b8b745", field_id="580e63fc8c9a982ac9b8b745")  # type: ignore[func-returns-value]
        is None
    )

    assert (
        await async_client.collections.fields.delete(
            collection_id="580e63fc8c9a982ac9b8b745", field_id="580e63fc8c9a982ac9b8b745"
        )  # type: ignore[func-returns-value]
        is None
    )


async def test_update(client: Webflow, async_client: AsyncWebflow) -> None:
    expected_response: typing.Any = {
        "id": "75821f618da60c18383330bcc0ca488b",
        "isRequired": False,
        "isEditable": True,
        "type": "RichText",
        "slug": "post-body",
        "displayName": "Post Body",
        "helpText": "Add the body of your post here",
    }
    expected_types: typing.Any = {
        "id": None,
        "isRequired": None,
        "isEditable": None,
        "type": None,
        "slug": None,
        "displayName": None,
        "helpText": None,
    }
    response = client.collections.fields.update(
        collection_id="580e63fc8c9a982ac9b8b745",
        field_id="580e63fc8c9a982ac9b8b745",
        is_required=False,
        display_name="Post Body",
        help_text="Add the body of your post here",
    )
    validate_response(response, expected_response, expected_types)

    async_response = await async_client.collections.fields.update(
        collection_id="580e63fc8c9a982ac9b8b745",
        field_id="580e63fc8c9a982ac9b8b745",
        is_required=False,
        display_name="Post Body",
        help_text="Add the body of your post here",
    )
    validate_response(async_response, expected_response, expected_types)
